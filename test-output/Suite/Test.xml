<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="12" hostname="konduris-MacBook-Air.local" failures="1" tests="12" name="Test" time="259.198" errors="0" timestamp="2025-09-14T08:01:06 IST">
  <testcase classname="testSuite.BottomNavigationBarDataProvider" name="testMethod" time="0.332"/>
  <testcase classname="testSuite.BottomNavigationBarDataProvider" name="testMethod" time="3.81"/>
  <testcase classname="testSuite.BottomNavigationBarDataProvider" name="testMethod" time="1.412"/>
  <testcase classname="testSuite.BottomNavigationBarDataProvider" name="testMethod" time="1.773"/>
  <testcase classname="testSuite.BottomNavigationBarDataProvider" name="testMethod" time="1.162"/>
  <testcase classname="testSuite.BottomNavigationBarDataProvider" name="testMethod" time="0.118"/>
  <testcase classname="testSuite.HomePageTestClass" name="ScrollExample" time="120.569"/>
  <testcase classname="testSuite.PlayPageTestClass" name="Scenario3" time="113.81"/>
  <testcase classname="testSuite.CategoriesPageTestClass" name="Scenario2" time="2.332">
    <failure type="java.lang.IllegalArgumentException" message="Keys to send should be a not null CharSequence">
      <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:96)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at io.appium.java_client.pagefactory.ElementInterceptor.getObject(ElementInterceptor.java:42)
at io.appium.java_client.pagefactory.interceptors.InterceptorOfASingleElement.call(InterceptorOfASingleElement.java:79)
at io.appium.java_client.proxy.Interceptor.intercept(Interceptor.java:78)
at org.openqa.selenium.remote.RemoteWebElement$ByteBuddy$4EC20TVX.sendKeys(Unknown Source)
at utils.CommonUtils.sendKeysOnElement(CommonUtils.java:119)
at pages.CategoriesPage.sendKeysOnElement(CategoriesPage.java:47)
at testSuite.CategoriesPageTestClass.Scenario2(CategoriesPageTestClass.java:32)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </failure>
  </testcase> <!-- Scenario2 -->
  <testcase classname="testSuite.AccountPageTestClass" name="Scenario3" time="6.054"/>
  <testcase classname="testSuite.CartPageTestClass" name="Scenario3" time="2.362"/>
  <testcase classname="testSuite.CartPageTestClass" name="Scenario4" time="2.83"/>
  <testcase classname="baseClass.Hooks" name="@BeforeTest ConfigureAppium" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest ConfigureAppium -->
  <testcase classname="baseClass.Hooks" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase classname="baseClass.Hooks" name="@BeforeTest ConfigureAppium" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest ConfigureAppium -->
  <testcase classname="baseClass.Hooks" name="@BeforeTest ConfigureAppium" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest ConfigureAppium -->
  <testcase classname="baseClass.Hooks" name="@BeforeTest ConfigureAppium" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest ConfigureAppium -->
  <testcase classname="baseClass.Hooks" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase classname="baseClass.Hooks" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase classname="baseClass.Hooks" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase classname="baseClass.Hooks" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase classname="baseClass.Hooks" name="@BeforeTest ConfigureAppium" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest ConfigureAppium -->
  <testcase classname="baseClass.Hooks" name="@BeforeTest ConfigureAppium" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest ConfigureAppium -->
  <testcase classname="baseClass.Hooks" name="@AfterSuite tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
</testsuite> <!-- Test -->
